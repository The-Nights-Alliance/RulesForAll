diff --git a/node_modules/opcommands/src/handlers/Command.js b/node_modules/opcommands/src/handlers/Command.js
index 8c94815..83e42f7 100644
--- a/node_modules/opcommands/src/handlers/Command.js
+++ b/node_modules/opcommands/src/handlers/Command.js
@@ -35,7 +35,6 @@ class CommandHandler {
             if (commandFile.options) Object.assign(commandObj, {options: commandFile.options});
             commands.push(JSON.stringify(commandObj));
         };
-
         _this.client.on("ready", async () => {
             const rest = new REST({ version: "9" }).setToken(_this.client.token);
             if (_this.options.notifyOwner && !_this.client.msgs.notifyOwnerMessage) throw new Error("[OPCommands] Missing notifyOwnerMessage parameter.");
@@ -43,7 +42,9 @@ class CommandHandler {
               _this.client.msgs.notifyOwnerMessage(user); 
             } else {
               // if there isn't any message, it uses a default one
-              user.send("I'm online!");
+              if(_this.options.notifyOwner) {
+                  user.send("I'm online!");
+              }
             };
             if (_this.options.testMode === true) {
                 if (!_this.options.testGuildID) throw new Error("[OPCommands] Unvalid or missing 'testGuildID' option in main class.");
@@ -92,8 +93,8 @@ class CommandHandler {
                     return interaction.reply({ content: "You must have the following permissions: " + commandFile.limits.permissions.join(", "), ephemeral: true });
                 };
             };
-            if (!cooldowns.has(`${commandFile.name}_${interaction.user.id}`)) {
-                if (!commandFile.limits.cooldown) return;
+            hascooldown: if (!cooldowns.has(`${commandFile.name}_${interaction.user.id}`)) {
+                if (!commandFile.limits.cooldown) break hascooldown;
                 cooldowns.set(`${commandFile.name}_${interaction.user.id}`, Date.now());
                 setTimeout(() => {cooldowns.delete(`${commandFile.name}_${interaction.user.id}`)}, hms(commandFile.limits.cooldown))
             } else {
@@ -111,7 +112,7 @@ class CommandHandler {
 
             try {
                 if (_this.options.logs) console.log(`[OPCommands] Command '${interaction.commandName}' executed by: '${interaction.user.tag}'`);
-                _this.client.commands.get(interaction.commandName).run(_this.client, interaction);
+                commandFile.run(_this.client, interaction);
                 if (_this.options.notifyOwner && (commandFile.limits.permissions == ('ADMINISTRATOR').toLowerCase())) {
                     _this.client.users.fetch(_this.client.owners[0]).then(user => {
                         user.send("[Logs] Administrator command `" + interaction.commandName + "` was executed by " + `<@${interaction.user.id}> in **${interaction.guild.name}**`);
